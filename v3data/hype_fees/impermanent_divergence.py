from v3data import GammaClient
from v3data.hype_fees.data import FeeGrowthSnapshotData
from v3data.hype_fees.fees import Fees


class ImpermanentDivergence:
    def __init__(self, protocol: str, chain: str, period_days: int):
        self.protocol = protocol
        self.chain = chain
        self.period_days = period_days
        self.gamma_client = GammaClient(protocol, chain)

    async def _get_uncollected_fees(self):
        fees_growth_data = FeeGrowthSnapshotData(
            self.period_days, self.protocol, self.chain
        )
        fees_data = await fees_growth_data.get_data()

























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        .
        uncollected_fees = {}
        for hypervisor_id, hypervisor_fees_data in fees_data.items():
            fees = Fees(hypervisor_fees_data, self.protocol, self.chain)
            uncollected_fees[hypervisor_id] = fees.fee_amounts()

        return uncollected_fees

    async def _query_total_supply(self, initial_block: int, end_block: int):
        query = """
        query totalSupply($initialBlock: Int!, endBlock: Int!) {
            initial: uniswapV3Hypervisors(
                block: {number: $initialBlock}
            ) {
                id
                totalSupply
            }
            end: uniswapV3Hypervisors(
                block: {number: $endBlock}
            ) {
                id
                totalSupply
            }
        }

        """

        variables = {"initialBlock": initial_block, "endBlock": end_block}

        response = await self.gamma_client.query(query, variables)

        return response["data"]

    def calcuate(self):
        unco
        # calculate initial value
